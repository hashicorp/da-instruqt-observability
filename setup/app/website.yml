---
apiVersion: v1
kind: ConfigMap
metadata:
  name: emojify-website-configmap
data:
  config: |
    window.env = {};
    window.env.config = {
      AUTH_URL: '/auth',
      API_URL: '/api/',
      HOME_URL: '/',
      PAYMENT_URL: '/api/payments',
      PAYMENT_ENABLED: false,
      OAUTH_ENABLED: false,
      AUTH_DISABLED: true
    };
  envoy-bootstrap: |
  consul-config: |
    services {
      id   = "${POD_NAME}-emojify-website"
      name = "emojify-website"
      address = "${POD_IP}"
      port = 5000
    
      connect {
        sidecar_service {
          port = 20000

          proxy {
            local_service_address = "127.0.0.1"
            local_service_port = 80

            config {
              protocol = "http"
              envoy_statsd_url = "udp://127.0.0.1:9125"
            }
          }
        }
      }

      checks {
        name = "Proxy Public Listener"
        tcp = "${POD_IP}:20000"
        interval = "10s"
        deregister_critical_service_after = "1m"
      }
    
      checks {
        name = "Destination Alias"
        alias_service = "emojify-website"
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emojify-website
  labels:
    app: emojify-website
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emojify-website
  template:
    metadata:
      labels:
        app: emojify-website
      annotations:
        "prometheus_io_scrape": "true"
    spec:
      volumes:
      - name: config
        configMap:
          name: emojify-website-configmap
          items:
          - key: config
            path: env.js
      - name: envoy-init
        configMap:
          name: emojify-website-configmap
          items:
          - key: envoy-bootstrap
            path: envoy_bootstrap.yaml
          - key: consul-config
            path: envoy_consul_config.hcl
      - name: envoy-config
        emptyDir: {}
      containers:

      - name: emojify-website
        image: "nicholasjackson/emojify-website:v0.5.9"
        imagePullPolicy: Always
        command: ["serve"]
        args: ["-s", "build"]
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: config
          mountPath: /app/build/config/
          readOnly: true
        - name: envoy-config
          mountPath: /consul-init
          readOnly: false

      - name: envoy-sidecar
        image: "envoyproxy/envoy-alpine:v1.9.0"
        command: ["envoy"]
        ports:
          - containerPort: 20000
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: true
        lifecycle:
          preStop:
            exec:
              command: [
               "sh",
               "-c",
               "/consul-init/consul services deregister -http-addr=http://${HOST_IP}:8500 -id=${POD_NAME}-emojify-website"
               ]
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        
      - name: prometheus-statsd
        image: prom/statsd-exporter:latest
        ports:
          - name: metrics
            containerPort: 9102
        resources:
          limits:
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      
      initContainers:
      - name: envoy-init
        image: "nicholasjackson/envoy-init:latest"
        imagePullPolicy: Always
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-config
          mountPath: /consul-init
          readOnly: false
        - name: envoy-init
          mountPath: /init
          readOnly: false

